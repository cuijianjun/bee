<style lang="less">
  @import '../../style/base.less';
  @import '../../style/list-show.less';
  @import './search.less';

</style>
<template>
  <view class="container">
    <!-- 搜索框 -->
    <view class="search-wrap ">
      <view class="search-inner-wrap center-flex">
        <image class="search-icon" src="../../image/bg/icon-search.png" lazy-load="{{false}}"></image>
        <input placeholder="请输入帖子内容搜索" class="search-text" value="{{keyword}}" @input="getSearchKeyword"></input>
      </view>
      <view class="search-btn center-flex" @tap="search({{keyword}})">
        搜索
      </view>
    </view>

    <!-- 热搜 -->
    <view class="search-keyword-wrap" wx:if="{{isShowSearchHinit}}">
      <view class="title">热搜</view>
      <view class="list-wrap">
        <repeat for="{{hotWord}}" key="index" index="index" item="item">
          <view class="search-item center-flex" @tap="search({{item.hot_search}})">
            {{item.hot_search}}
          </view>
        </repeat>
      </view>
    </view>

    <!-- 没有搜索结果提示 -->
    <view class="no-result-hinit center-flex" wx:if="{{noResultHinit}}">
      没有您想要的内容
    </view>

    <!-- 信息列表 -->
    <view class="publish-msg-wrap" style="padding-top:20rpx;">
      <repeat for="{{msgList}}" key="index" index="index" item="item">
        <view class="publish-msg-item" @tap="returnToDetail({{item.id}},{{item.user_id}})">
          <view class="item-inner-wrap">
            <view class="pic-wrap">
              <image class="pic" mode="aspectFill" src="{{item.productImage[0]}}" lazy-load="{{true}}"></image>
            </view>
            <view class="content-wrap">
              <view class="title cutText2">{{item.title}}</view>
              <view class="middle-wrap">
                <view class="price">￥{{item.price}}</view>
                <view class="people">{{item.pageView}}人想要</view>
              </view>
              <view class="footer">
                <image class="photo" src="{{item.user.avatarUrl}}" lazy-load="{{true}}"></image>
                <view class="msg-wrap">
                  <view class="name cutText1">{{item.user.nickName}}</view>
                  <view class="address">{{item.city}}</view>
                </view>
              </view>
            </view>
          </view>
        </view>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '搜索页',

    }
    components = {

    }

    // mixins = [testMixin]

    data = {
      user_id: '',
      page: 1,
      limit: '20',
      msgList: [], //搜索结果
      hotWord: [], //搜索热词
      isShowSearchHinit: true, //是否显示热搜
      keyword: '', //搜索关键词,
      noResultHinit: false, //没有搜索结果时显示
    }

    computed = {

    }

    methods = {
      //点击搜索
      search(keyword) {
        console.log('点击搜索');
        console.log('keyword', keyword);
        wepy.showLoading({
          title: '搜索中',
          mask: true,
        });

        if (!keyword) { //搜索关键词为空
          wepy.showToast({
            title: '搜索关键词不能为空', 
            icon: 'none', 
            duration: 5000, 
          });
          
        } else {
          this.msgList=[];
          this.keyword = keyword;
          let data = {
            limit: this.limit + '',
            page: this.page + '',
            // user_id: this.user_id + '',
            // labelCode: '',
            searchQuery: this.keyword,
          }

          this.getListMsg(data).then(() => {
            this.isShowSearchHinit = false;
            wepy.hideLoading();
          })
        }
        wepy.hideLoading();
      },

      // 获取搜索关键词
      getSearchKeyword(e) {
        console.log(e);
        this.keyword = e.detail.value;
        if(!e.detail.value){//关键词为空
          this.msgList=[];
          this.isShowSearchHinit=true;
          this.noResultHinit=false;
        }
      },

      //跳转详情页
      returnToDetail(product_id, user_id) {
        wepy.navigateTo({
          url: `/pages/detail/detail?product_id=${product_id}&user_id=${user_id}`
        });
      },
    }

    events = {

    }

    // 获取列表信息
    async getListMsg(data) {
      let list = await request.getGoodsLists(data);
      console.log('列表信息', list);
      this.isShowSearchHinit=false;
      if (list && list.length > 0) {
        this.msgList = list;
      } else {
        if(this.page==1){
          this.noResultHinit=true;
        }
        this.$apply();
        wepy.hideLoading();
        return;
      }

      if (this.page == 1) {
        this.msgList = list;
        this.noResultHinit=false;
      } else {
        this.noResultHinit=true;
        this.msgList = this.msgList.concat(list);
      }
      this.$apply();
      wepy.hideLoading();
    }

    //获取热词
    async getHotWord() {
      let word = await request.getHotWord();
      console.log('获取热词', word);

      if (word && word.length > 0) {
        this.hotWord = word;
        this.$apply();
      }
      wepy.hideLoading();
    }

    //滑动到底部加载更多
    onReachBottom() {
      this.page++;
      wepy.showLoading({
        title: '加载中...',
        mask: true,
      });
      let data = {
        limit: this.limit,
        page: this.page + '',
        // user_id: this.user_id,
        // labelCode: '',
        searchQuery: this.keyword,
      }
      this.getListMsg(data).then(() => {
        wepy.hideLoading();
      })
    }

    async onLoad(options) {
      console.log('onload', options);
      let userInfo = await this.$parent.login();
      if (userInfo) {
        this.user_id = userInfo.id + '';
      }
      this.getHotWord();
      this.$apply();
    }
  }

</script>

<style lang="less">
  @import '../../style/base.less';
  @import './order-detail.less';
</style>
<template>
  <view class="container">
    <view class="order-top-wrap">
      <view class="left">
        <view class="order-time">下单时间 {{orderInfo.updated_at}}</view>
        <view class="order-number">订单编号 {{orderInfo.order_no}}</view>
      </view>
      <view class="state center-flex" wx:if="{{orderInfo.status==1}}">待付款</view>
      <view class="state center-flex" wx:if="{{orderInfo.status==2}}">已付款</view>
    </view>

    <view class="user-info-wrap">
      <view class="name">{{orderInfo.nickName}}</view>
      <view class="tell">{{orderInfo.tell}}</view>
    </view>

    <view class="order-product">
      <view class="pic-wrap">
        <image class="pic" src="{{orderInfo.snap_img}}" mode="scaleToFill" lazy-load="false"></image>
      </view>
      <view class="right">
        <view class="content">
          <view class="title">{{orderInfo.snap_name}}</view>
          <view class="price">¥{{orderInfo.total_price}}</view>
        </view>
        <view class="count">x{{orderInfo.total_count}}</view>
      </view>
    </view>

    <view class="footer-wrap">
      <view class="money">付款合计：¥{{orderInfo.total_money}}</view>
      <view class="pay-btn center-flex {{orderInfo.status>1?'pay-money':''}}" @tap="payment">{{orderInfo.status>1?'已付款':'立即支付'}}</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'
  import noMsgHinit from '../../components/noMsgHinit/noMsgHinit'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '订单详情'
    }
    components = {

    }

    data = {
      user_id: '',
      orderInfo:{},
    }

    components = {}

    computed = {

    }

    methods = {

      //付款
      async payment(){
        let orderInfo=this.orderInfo;
        if(orderInfo.status>1){
          return ;
        }
        // let data={
        //   timeStamp:orderInfo.updated_at,
        //   nonceStr:orderInfo.order_no,
        //   package:orderInfo.prepay_id,
        //   paySign:orderInfo.
        // };
        // let orderInfo = await request.reqPayment(data);
      }  
    }

    events = {
      
    }

    async onLoad(params) {
      // wepy.showLoading({
      //   title: '加载中', 
      //   mask: true, 
      // }); 
      let data={
        user_id:params.user_id,
        product_id:params.product_id,
        total_count:params.total_count,
      }
      this.createOrder(data); //获取banner和类型
    }

    //生成订单
    async createOrder(data) {
      let orderInfo = await request.sendPayReq(data);
      console.log('订单信息', orderInfo);
      if(orderInfo){
        this.orderInfo=orderInfo;
        this.$apply();
      }else {
        wepy.showToast({
          title: '下单失败',
          icon: 'none',
          duration: 2000,
        });  
      }
      
    }
  }

</script>

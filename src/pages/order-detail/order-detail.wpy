<style lang="less">
  @import '../../style/base.less';

</style>
<template>
  <view class="container" style="padding-top:{{position?214:114}}rpx;">
     订单详情
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'
  import noMsgHinit from '../../components/noMsgHinit/noMsgHinit'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    }
    components = {

    }

    data = {
      region: ['', '', ''],
      customItem: '全部',
      address: '全部',
      searchQuery: '',
      swiperData: { //轮播数据
        indicatorDots: true,
        autoplay: true,
        interval: 3000,
        duration: 500,
        circular: true,
        arr: [],
      },
      user_id: '',
      limit: '20',
      msgList: [],
      isShowHinit:false,//是否显示没信息时的提示
      type: [], //信息产品类型
      labelCode: '', //类型码
      currentTypeIndex: 0, //当前信息类型
      page: 1,
      swiperHeight:'',
      position:0,//类型块的定位方式 1为固定定位，0为相对定位
    }

    components = {
      noMsgHinit: noMsgHinit, //没有数据提示块
    }

    computed = {

    }

    methods = {

      //跳转详情页
      returnToDetail(product_id, user_id) {
        wepy.navigateTo({
          url: `/pages/detail/detail?product_id=${product_id}&user_id=${user_id}`
        });
      },

      //返回顶部
      returnToTop() {
        wepy.pageScrollTo({
          scrollTop: 0,
          duration: 300
        });
      },

      //切换信息类型
      getCurrentType(idx, labelCode) {
        console.log('type', idx, labelCode);
        this.currentTypeIndex = idx;
        this.labelCode = labelCode;
        this.page = 1;
        this.msgList = [];
        let data = {
          limit: this.limit,
          page: this.page + '',
          user_id: this.user_id,
          labelCode: this.labelCode,
          searchQuery: this.searchQuery,
        }
        this.getListMsg(data); //获取列表信息
      },

      //跳转搜索页面
      returnToSeach() {
        wepy.navigateTo({
          url: `/pages/search/search?location=${this.region}`
        });

      },

      //选择地址
      regionChange(e) {
        console.log('选择地址', e.detail.value)
        let addressArr = e.detail.value;
        this.region = addressArr;
        if (addressArr[0] == '全部') {
          this.address = '全部';
        } else if (addressArr[1] == '全部') {
          this.address = addressArr[0];
        } else {
          this.address = addressArr[1];
        }
        let searchQuery = addressArr.join('').replace(/全部/g, '');
        this.searchQuery = searchQuery;

        let data = {
          limit: this.limit,
          page: this.page + '',
          user_id: this.user_id,
          labelCode: this.labelCode,
          searchQuery: searchQuery,
        }
        this.getListMsg(data).then(() => {
          wepy.hideLoading();
        })
      },

      //滑动
      onPageScroll(e){
        console.log(e.scrollTop);
        let scrollTop=e.scrollTop;
        if(scrollTop>=this.swiperHeight){
          this.position=1;
        }else {
          this.position=0;
        }
      }
    }

    getSwiperHeight(){
      let that = this;
      wx.createSelectorQuery().select('#swiper').boundingClientRect(function (rect) {
        console.log('rect',rect);
        that.swiperHeight=rect.height;
        that.$apply();
      }).exec()
    }

    events = {
      
    }

    async onLoad() {
      // wepy.showLoading({
      //   title: '加载中', 
      //   mask: true, 
      // });
      // console.log(ListShow);
      let userInfo = await this.$parent.login();
      if (userInfo) {
        this.user_id = userInfo.id + '';
      }  
      this.$apply();
      this.getBanner(); //获取banner和类型
    }

    // 获取banner和类型
    async getBanner() {
      let res = await request.getTypeList();
      if (res) {
        console.log('banner', res);
        this.swiperData.arr = res.rows;
        this.type = res.label.rows;
        this.labelCode = res.label.rows[0].code;
        this.$apply();

        let data = {
          limit: this.limit + '',
          page: this.page + '',
          user_id: this.user_id + '',
          labelCode: this.labelCode + '',
          searchQuery: this.searchQuery,
        }
        this.getListMsg(data); //获取列表信息
      }
    }

    // 获取列表信息
    async getListMsg(data) {
      let list = await request.getGoodsLists(data);
      console.log('列表信息', list);

      if (list && list.length > 0) {
        this.msgList = list;
      } else {
        if(this.page==1){
          this.isShowHinit=true;
        }
        this.$apply();
        wepy.hideLoading();
        return;
      }

      if (this.page == 1) {
        this.msgList = list;
      } else {
        this.msgList = this.msgList.concat(list);
      }
      this.$apply();
      wepy.hideLoading();
      this.getSwiperHeight();
    }

    //滑动到底部加载更多
    onReachBottom() {
      this.page++;
      wepy.showLoading({
        title: '加载中...',
        mask: true,
      });
      let data = {
        limit: this.limit,
        page: this.page + '',
        user_id: this.user_id,
        labelCode: this.labelCode,
        searchQuery: this.searchQuery,
      }
      this.getListMsg(data).then(() => {
        wepy.hideLoading();
      })

    }

     //分享
    onShareAppMessage() {
      return {
        title: '优质二手资源等您来淘',
        path: '/pages/index/index',
        imageUrl: ''
      };
    }

  }

</script>

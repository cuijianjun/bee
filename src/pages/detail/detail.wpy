<style lang="less">
  @import '../../style/base.less';
  @import './detail.less';

</style>
<template>
  <view class="container">
    <!-- 发表内容项 -->
    <view class="publish-msg-wrap">
      <view class="publish-msg-item">
        <view class="msg-top-wrap">
          <view class="user-wrap">
            <image class="user-photo" src="{{info.user.avatarUrl}}" lazy-load="{{true}}"></image>
            <view class="user-msg-wrap">
              <view class="user-name">{{info.user.nickName}}</view>
              <view class="publish-time">{{info.updated_at}} 发布于{{info.city}}</view>
            </view>
          </view>
        </view>
        <view class="price" >
          ￥{{info.price}}
        </view>
        <view class="msg-content-wrap">
          {{info.title}} {{info.description}}
        </view>
        <view class="msg-img-wrap">
          <repeat for="{{info.productImage}}" key="index" index="index" item="item">
            <image class="msg-img" src="{{item}}" lazy-load="{{true}}" @tap="previewImg({{item}},{{info.pics}})">
            </image>
          </repeat>
        </view>

      </view>
      <view class="gray-space"></view>
      <view class="footer-wrap">
        <view class="see-count-wrap">
          <image class="icon-see" src="../../image/bg/icon-see.png" mode="widthFix" lazy-load="false"></image>
          <text style="color: #3aa1c2;">{{info.pageView}}</text>人浏览
        </view>
      </view>
    </view>

    <!-- 底部固定按钮组 -->
    <view class="footer-btns-wrap">
      <view class="btn btn-index" @tap="reurnToIndex">
        <image class="icon" src="../../image/bg/icon_index.png" mode="widthFix" lazy-load="false"></image>
        <view class="txt"> 首页</view>
      </view>
      <view class="btn btn-collect" @tap="collect">
        <image class="icon"
          src="{{info.collect.isCollect?'../../image/bg/icon_collect2.png':'../../image/bg/icon_collect1.png'}}"
          mode="widthFix" lazy-load="false"></image>
        <view class="txt"> {{info.collect.isCollect?'已收藏':'收藏'}}</view>
      </view>
      <view class="btn btn-tell" @tap="makePhone({{info.phoneNumber}})">
        <view class="tell-txt">联系卖家</view>
        <view class="tell-number">{{info.tell}}</view>
      </view>
      <view class="btn btn-tell buy-btn" @tap="buy">
        <view class="tell-txt">马上买</view>
        <view class="tell-number">{{info.tell}}</view>
      </view>
    </view>

    <!-- 侧边按钮 -->
    <view class="btn-wrap center-flex btn-share1">
      转发
      <button class="btn-btn button-cover" open-type="share"></button>
    </view>
    <!-- 侧边按钮 -->
    <view class="btn-wrap center-flex btn-share2" @tap="returnToTop">顶部</view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'
  import util from '../../lib/util'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    }
    components = {

    }

    // mixins = [testMixin]

    data = {
      info: {},
    }

    computed = {

    }

    methods = {
      //点击拨打电话
      makePhone(tell) {
        wepy.makePhoneCall({
          phoneNumber: tell
        });
      },

      //跳转详情页
      reurnToIndex() {
        wepy.switchTab({
          url: '/pages/index/index'
        });
      },

      //预览图片
      previewImg(current, urls) {
        wepy.previewImage({
          current: current,
          urls: urls,
        });
      },

      //返回顶部
      returnToTop() {
        wepy.pageScrollTo({
          scrollTop: 0,
          duration: 300
        });
      },

      //点击收藏
      collect() {
        let that = this;
        let info = this.info;
        let data = {
          user_id: info.user_id,
          product_id: info.id,
          isCollect: !info.collect.isCollect,
        }

        if (info.collect.isCollect) {
          request.getCollectState(data).then((res) => {
            console.log('取消收藏', res);
            if (res) {
              that.info.collect.isCollect = false;
              that.$apply()
              wepy.showToast({
                title: '取消收藏',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            }else {
              wepy.showToast({
                title: '操作失败',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            }


          });
        } else {
          request.getCollectState(data).then((res) => {
            console.log('收藏', res);
            if(res){
              that.info.collect.isCollect = true;
              that.$apply()
              wepy.showToast({
                title: '收藏成功',
                icon: 'success',
                duration: 2000,
                mask: true,
              });
            }else {
              wepy.showToast({
                title: '操作失败',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            }
            
          });
        }
      },

    }

    //分享
    onShareAppMessage() {
      return {
        title: '标题',
        path: `/pages/detail?id=${123}`
      }
    }

    events = {

    }

    async onLoad(params) {
      console.log(params);
      let data = {
        product_id: params.product_id,
        user_id: params.user_id,
      }
      this.getGoodsDetail(data); //获取商品信息
    }

    //获取信息
    async getGoodsDetail(data) {
      let list = await request.getGoodsDetail(data);
      console.log('列表信息', list);
      if (list) {
        list.updated_at=util.formatTime(list.updated_at-0);
        this.info = list;
        this.$apply();
      } else {

      }
    }

    //分享
    onShareAppMessage() {
      return {
        title: this.info.title,
        path: '/pages/detail/detail',
        imageUrl: this.info.productImage[0],
      };
    }
  }

</script>

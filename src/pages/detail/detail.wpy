<style lang="less">
  @import '../../style/base.less';
  @import './detail.less';

</style>
<template>
  <view class="container">
    <!-- 发表内容项 -->
    <view class="publish-msg-wrap">
      <view class="publish-msg-item">
        <view class="msg-top-wrap">
          <view class="user-wrap">
            <image class="user-photo" src="{{info.user.avatarUrl}}" lazy-load="{{true}}"></image>
            <view class="user-msg-wrap">
              <view class="user-name">{{info.user.nickName}}</view>
              <view class="publish-time">{{info.updated_at}} 发布于{{info.city}}</view>
            </view>
          </view>
        </view>
        <view class="price">
          ￥{{info.price}}
        </view>
        <view class="msg-content-wrap">
          {{info.title}} {{info.description}}
        </view>
        <view class="msg-img-wrap">
          <repeat for="{{info.productImage}}" key="index" index="index" item="item">
            <image mode="widthFix" class="msg-img" src="{{item}}" lazy-load="{{true}}"
              @tap="previewImg({{item}},{{info.productImage}})">
            </image>
          </repeat>
        </view>

      </view>
      <view class="gray-space"></view>
      <view class="footer-wrap">
        <view class="see-count-wrap">
          <image class="icon-see" src="../../image/bg/icon-see.png" mode="widthFix" lazy-load="false"></image>
          <text style="color: #3aa1c2;">{{info.pageView}}</text>人浏览
        </view>
      </view>
    </view>

    <!-- 底部固定按钮组 -->
    <view class="footer-btns-wrap">
      <view class="btn btn-index" @tap="reurnToIndex">
        <image class="icon" src="../../image/bg/icon_index.png" mode="widthFix" lazy-load="false"></image>
        <view class="txt"> 首页</view>
      </view>
      <view class="btn btn-collect">
        <view class="collect-wrap" @tap="collect">
          <image class="icon"
            src="{{info.collect.isCollect?'../../image/bg/icon_collect2.png':'../../image/bg/icon_collect1.png'}}"
            lazy-load="false"></image>
          <view class="txt"> {{info.collect.isCollect?'已收藏':'收藏'}}</view>
        </view>
        <button wx:if="{{!avatarUrl || !nickName}}" class='button-cover' open-type="getUserInfo"
          bindgetuserinfo="getUserInfo"></button>
      </view>
      <view class="btn btn-tell" wx:if="{{!isShowbtn}}">
        <view class="tell-txt center-flex" @tap="makePhone({{info.phoneNumber}})">联系卖家</view>
      </view>
      <view class="btn btn-tell buy-btn"  wx:if="{{isShowbtn}}">
        <view class="tell-txt center-flex" @tap="buy">马上买</view>
        <button wx:if="{{!avatarUrl || !nickName}}" class='button-cover' open-type="getUserInfo"
          bindgetuserinfo="getUserInfo"></button>
        <button wx:if="{{!tel}}" class='button-cover' open-type="getPhoneNumber"
          bindgetphonenumber="getPhoneNumber"></button>
      </view>
    </view>

    <!-- 侧边按钮 -->
    <view class="btn-wrap center-flex btn-share1 complain-btn" @tap="complain">投诉</view>
    <!-- 侧边按钮 -->
    <view class="btn-wrap center-flex btn-share1" @tap="showShare">转发</view>
    <!-- 侧边按钮 -->
    <view class="btn-wrap center-flex btn-share2" @tap="returnToTop" wx:if="{{isShowTop}}">顶部</view>

    <!-- 底部转发 -->
    <view class="shade-wrap" wx:if="{{showShare}}">
      <view class="black-cancle-btn" @tap="hideShare"></view>
      <view class="footer-share-wrap">
        <view class="title">邀请好友</view>
        <view class="share-content">
          <view class="share-item-wrap">
            <view class="icon"></view>
            <view class="txt">分享微信</view>
            <button @tap="hideShare" class="btn-btn button-cover" open-type="share"></button>
          </view>
          <view class="share-item-wrap" @tap="creatPoster">
            <view class="icon"></view>
            <view class="txt">生成海报</view>
          </view>
        </view>
        <view class="cancle-btn center-flex" @tap="hideShare">取消</view>
      </view>
    </view>

    <!-- 海报 -->
    <view class=" poster-window" @tap="seePoster" wx:if="{{isShowPoster}}">
      <image class="poster-img" style="display:block;width:{{winWidth}}px;height:{{posterHeight}}px;" src="{{posterUrl}}" mode="scaleToFit" lazy-load="false"></image>
    </view>

    <!-- 绘制海报 -->
    <canvas class="canvas-poster" style="width: 750px; height: {{canvasHeight}}px;" canvas-id="productShare"></canvas>

    <!-- 图片按钮 -->
    <view class="poster-btn-wrap" wx:if="{{isShowPoster}}">
      <view class="poster-btn center-flex cancle" @tap="cancel">取消</view>
      <view class="poster-btn center-flex save" @tap="save">
        保存
        <button class="button-cover" open-type="openSetting" bindopensetting="handleSetting" wx:if="{{!isCanSave}}">打开授权设置页</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import address from '../../lib/api/address'
  import request from '../../lib/api/request'
  import util from '../../lib/util'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '详情页'
    }
    components = {

    }

    // mixins = [testMixin]

    data = {
      info: {},
      user_id: '',
      openid:'',
      tel: '16666666666',
      avatarUrl: '头像',
      nickName: '昵称',
      showShare: false, //是否展示分享
      isShowPoster:false,//是否展示海报
      isCanSave:true,//是否已经授权保存图片
      isShowbtn:false,//是否显示马上买和投诉
      isShowTop:false,//是否显示返回顶部按钮

      code1: 'https://res.pplu.vip/fd1ded660c403d6d080a6f8c805cbb4f.jpeg', //二维码临时地址
      pic1: 'http://t.cn/E6aY1Ii', //图片临时地址 
      code2: '', //二维码临时地址
      pic2: '', //图片临时地址

      posterUrl: '',//海报图片
      picWidth: '',//画布中产品图片的宽度
      picHeight: '',//画布中产品图片的高度
      canvasHeight: '',//画布的宽度
      winWidth: '',//屏幕的宽度
      winHeight: '',//屏幕的宽度
      posterHeight:'',//海报的高度

    }

    computed = {

    }

    methods = {
      //点击拨打电话
      makePhone(tell) {
        wepy.makePhoneCall({
          phoneNumber: tell
        });
      },

      //跳转详情页
      reurnToIndex() {
        wepy.switchTab({
          url: '/pages/index/index'
        });
      },

      //预览图片
      previewImg(current, urls) {
        wepy.previewImage({
          current: current,
          urls: urls,
        });
      },

      //返回顶部
      returnToTop() {
        wepy.pageScrollTo({
          scrollTop: 0,
          duration: 300
        });
      },

      //点击收藏
      collect() {
        let that = this;
        let info = this.info;
        let data = {
          user_id: this.user_id,
          product_id: info.id,
          isCollect: !info.collect.isCollect,
        }

        if (info.collect.isCollect) {
          request.getCollectState(data).then((res) => {
            console.log('取消收藏', res);
            if (res) {
              that.info.collect.isCollect = false;
              that.$apply()
              wepy.showToast({
                title: '取消收藏',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            } else {
              wepy.showToast({
                title: '操作失败',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            }


          });
        } else {
          request.getCollectState(data).then((res) => {
            console.log('收藏', res);
            if (res) {
              that.info.collect.isCollect = true;
              that.$apply()
              wepy.showToast({
                title: '收藏成功',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            } else {
              wepy.showToast({
                title: '操作失败',
                icon: 'none',
                duration: 2000,
                mask: true,
              });
            }

          });
        }
      },

      //获取手机号
      getPhoneNumber(e) {
        console.log('手机号', e);
      },

      //马上买
      buy() {
        wepy.navigateTo({
          url: `/pages/order-detail/order-detail?user_id=${this.user_id}&product_id=${this.info.id}&total_count=1`
        });
      },

      // 展示分享
      showShare() {
        this.showShare = true;
      },

      // 隐藏分享
      hideShare() {
        this.showShare = false;
      },

      //生成海报
      creatPosterImg(){
        this.creatPoster();
      },

      //取消保存图片
      cancel(){
        console.log('点击取消');
        this.isShowPoster=false;
      },

      //保存图片
      save(){
        this.saveImg();
      },

      //检测是否授权保存图片
      handleSetting(e){
        console.log('检测是否授权保存图片',e);
        if(!e.detail.authSetting['scope.writePhotosAlbum']){//没有授权
          wepy.showToast({
            title: '若不打开授权，则无法将图片保存在相册中', 
            icon: 'none', 
            duration: 2000, 
          });
          
        }else {//已授权
          this.saveImg();
        } 
      },

      //惦记投诉
      complain(){
        console.log('点击投诉');
      },

      //滑动
      onPageScroll(e){
        // console.log(e.scrollTop);
        setTimeout(() => {
          if(e.scrollTop>0){
            this.isShowTop=true;
          }else {
            this.isShowTop=false;
          }
        }, 1000);       
      }
    }

    //生成海报
    creatPoster() {
      let that = this;
      that.showShare = false;
      let context = wx.createCanvasContext('productShare');
      this.drawBg(context) //绘制背景
      this.drawTitle(context) //绘制标题
      this.drawTime(context) //绘制发布日期
      this.drawAddress(context) //绘制发布地址
      this.drawHinitTxt(context) //绘制提示语
      this.drawPic(context) //绘制商品图片
    }

    //保存图片
    saveImg(){
      let that=this;
        wx.saveImageToPhotosAlbum({
          filePath:this.posterUrl,
          success(res) { 
            console.log('保存图片成功',res);
            that.isShowPoster=false;
            that.$apply();
            wepy.showToast({
              title: '保存图片成功', 
              icon: 'success', 
              duration: 2000, 
            }); 
          },
          fail(){
            that.isCanSave=false;
            that.$apply();
            wepy.showToast({
              title: '保存图片失败', 
              icon: 'none', 
              duration: 2000, 
            });
          }
        })
    }

    //tian8
    drawBg(context){
      console.log('绘制背景色');
      context.setFillStyle('#fff')
      context.fillRect(0, 0, 750, this.canvasHeight)
    }
   
    //绘制标题
    drawTitle(context) {
      console.log('绘制标题');
      context.setFontSize(30);
      context.setTextAlign('left');
      context.setFillStyle('#333');
      context.fillText(this.info.title, 40, 100)
    }

    //绘制发布日期
    drawTime(context) {
      console.log('绘制发布日期');
      context.setFontSize(30);
      context.setTextAlign('left');
      context.setFillStyle('#999');
      context.fillText(this.info.updated_at, 40, 160)
    }

    //绘制发布地址
    drawAddress(context) {
      console.log('绘制发布地址');
      context.setFontSize(30);
      context.setTextAlign('left');
      context.setFillStyle('#999');
      context.fillText('发布于'+this.info.city, 40, 206)
    }

    //绘制提示语
    drawHinitTxt(context) {
      console.log('绘制提示语');
      context.setFontSize(20);
      context.setTextAlign('left');
      context.setFillStyle('#999');
      context.fillText('长按识别二维码查看详情', 500, 280)
    }

    //绘制商品图片
    drawPic(context) {
      console.log('绘制商品图片');
      context.drawImage(this.info.productImage[0], 40, 300, this.picWidth, this.picHeight);
      this.drawCode(context);
    }

    //绘制二维码
    drawCode(context) {
      console.log('绘制二维码');
      let that = this;
      context.drawImage(this.code2, 500, 40, 200, 200);
      context.draw(false, (e) => {
        console.log('绘制完成');
        setTimeout(() => {
          wx.canvasToTempFilePath({
            canvasId: 'productShare',
            success(res) {
              console.log('图片地址', res.tempFilePath)
              that.posterUrl = res.tempFilePath;
              that.isShowPoster=true;
              that.$apply();
            }
          })
        }, 500); 
      })
    }

    //获取图片的临时地址
    getCanvasImgUrl() {
      let count = 0;
      let that = this;

      wx.getImageInfo({
        src: that.info.productImage[0],
        success(res) {
          that.pic2 = res.path;

          let radio = res.width / res.height;//图片的宽高比例
          console.log('radio',radio);
          let picWidth = 750 - (40 * 2);//绘制图片的宽
          let picHeight = parseInt(picWidth / radio);//绘制图片的高
          that.picWidth =  picWidth;
          that.picHeight = picHeight;
          that.canvasHeight = picHeight + 340;

          let radio2=750/that.canvasHeight;
          console.log('radio',radio2);
          that.posterHeight=parseInt(that.winWidth/radio2);

          that.$apply();
          count++;
          if(count>=2){
            wepy.hideLoading();
          }
        },
        fail(){
          wepy.hideLoading();
          console.log('获取产品图片临时地址失败');
        }
      })

      wx.getImageInfo({
        src: that.code1,
        success(res) {
          console.log('res1', res);
          that.code2 = res.path;
          that.$apply();
          count++
          if(count>=2){
            wepy.hideLoading();
          }
        },
        fail(){
          wepy.hideLoading();
          console.log('获取小程序码临时地址失败');
        }
      })
    }

    events = {

    }

    async onLoad(params) {
      wepy.showLoading({
        title: '加载中',
        mask: true, 
      });
      
      console.log(params);
      let info = await this.$parent.getSystemInfo();
      console.log('info', info);
      this.winWidth = info.windowWidth;
      this.winHeight = info.windowHeight;

      let userInfo = await this.$parent.login();
      if (userInfo) {
        this.user_id = userInfo.id + '';
        this.openid=userInfo.openid;
      }
      this.$apply();

      let data = {
        product_id: params.product_id,
        user_id: params.user_id,
      }
      this.getGoodsDetail(data); //获取商品信息 
    }

    //获取信息
    async getGoodsDetail(data) {
      let list = await request.getGoodsDetail(data);
      let openid=this.$parent.globalData.openid;
      console.log('列表信息', list);
      if (list) {
        list.updated_at = util.formatTime(list.updated_at - 0);
        if(this.openid==openid){
          this.isShowbtn=true;
        }
        this.info = list;    
        this.$apply();
        this.getCanvasImgUrl();
      } else {
        wepy.hideLoading();
        wepy.showToast({
          title: '请求失败',
          icon: 'success',
          duration: 2000,
        });
      }
    }

    //分享
    onShareAppMessage() {
      this.showShare = false;
      return {
        title: this.info.title,
        path: `/pages/detail/detail?product_id=${this.info.id}&user_id=${this.info.user_id}`,
        imageUrl: this.info.productImage[0],
      };
    }
  }

</script>

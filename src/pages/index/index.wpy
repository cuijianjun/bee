<style lang="less">
  @import '../../style/base.less';
  @import '../../style/list-show.less';
  @import './index.less';

</style>
<template>
  <view class="container" style="padding-top:{{position?214:114}}rpx;">
    <!-- 搜索框 -->
    <view class="search-wrap center-flex">
      <view class="location-wrap center-flex">
        <view class="address-txt">{{address}}</view>
        <image class="more-icon" src="../../image/bg/icon_more.png" mode="widthFill" lazy-load="{{false}}"></image>
        <picker class="button-cover" mode="region" @change="regionChange" value="{{region}}"
          custom-item="{{customItem}}">
          <view class="picker button-cover">
            当前选择：{{region[0]}}，{{region[1]}}，{{region[2]}}
          </view>
        </picker>
      </view>
      <view class="search-inner-wrap center-flex" @tap="returnToSeach">
        <image class="search-icon" src="../../image/bg/icon-search.png" lazy-load="{{false}}"></image>
        <view class="search-text">请输入帖子内容搜索</view>
      </view>
    </view>

    <!-- swiper -->
    <view class="swiper-wrap" wx:if="{{swiperData.arr.length>0}}" id="swiper">
      <swiper class="swiper-inner-wrap" indicator-dots="{{swiperData.indicatorDots}}" autoplay="{{swiperData.autoplay}}"
        interval="{{swiperData.interval}}" duration="{{swiperData.duration}}" circular="{{swiperData.circular}}"
        indicator-color="rgba(240,240,240,1)" indicator-active-color="rgba(234,68,78,1)">
        <repeat for="{{swiperData.arr}}" key="{{index}}" index="index" item="item">
          <swiper-item class="banner-item">
            <image class="swiper-img" src="{{item.imageUrl}}" />
            <view class="banner-shadow"></view>
            <view class="banner-brief">
              {{item.description}}
            </view>
          </swiper-item>
        </repeat>
      </swiper>
    </view>

    <!-- 信息类型-->
    <view class="type-container {{position?'type-style1':'type-style2'}}">
      <scroll-view class="scroll-view-wrap" scroll-x="true" bindscroll="scroll" style="width: 100%">
        <repeat for="{{type}}" key="index" index="index" item="item">
          <view class="type-item {{labelCode==(index+1)?'active-type':''}}"
            @tap="switchType({{item.code}})">{{item.labelName}}</view>
        </repeat>
      </scroll-view>
    </view>

    <!-- 信息列表 -->
    <view class="publish-msg-wrap">
      <repeat for="{{msgList}}" key="index" index="index" item="item">
        <view class="publish-msg-item" @tap="returnToDetail({{item.id}},{{item.user_id}})">
          <view class="item-inner-wrap">
            <view class="pic-wrap">
              <image class="pic" mode="aspectFill" src="{{item.productImage[0]}}" lazy-load="{{true}}"></image>
            </view>
            <view class="content-wrap">
              <view class="title cutText2">{{item.title}}</view>
              <view class="middle-wrap">
                <view class="price">￥{{item.price}}</view>
                <view class="people">{{item.pageView}}人想要</view>
              </view>
              <view class="footer">
                <image class="photo" src="{{item.user.avatarUrl}}" lazy-load="{{true}}"></image>
                <view class="msg-wrap">
                  <view class="name cutText1">{{item.user.nickName}}</view>
                  <view class="address">{{item.city}}</view>
                </view>
              </view>
            </view>
          </view>
        </view>
      </repeat>
    </view>
    <!-- 没有搜索结果提示 -->
    <view class="no-result-hinit center-flex" wx:if="{{isShowHinit}}" style="font-size:40rpx;height:300rpx;">
      没有您想要的内容
    </view>

    <!-- 返回顶部 -->
    <view class="return-to-top center-flex" wx:if="{{isShowTop}}" @tap="returnToTop">
      <image class="icon-to-top" src="../../image/bg/icon-to-top.png" mode="widthFix" lazy-load="false"></image>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'
  import noMsgHinit from '../../components/noMsgHinit/noMsgHinit'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页'
    }
    components = {

    }

    data = {
      region: ['', '', ''],
      customItem: '全部',
      address: '全部',
      searchQuery: '',
      swiperData: { //轮播数据
        indicatorDots: true,
        autoplay: true,
        interval: 3000,
        duration: 500,
        circular: true,
        arr: [],
      },
      user_id: '',
      limit: '20',
      msgList: [],
      isShowHinit:false,//是否显示没信息时的提示
      type: [], //信息产品类型
      labelCode: 1, //类型码
      // currentTypeIndex: 0, //当前信息类型
      page: 1,
      swiperHeight:'',
      position:0,//类型块的定位方式 1为固定定位，0为相对定位
      isShowTop:false,//是否需要返回顶部
    }

    components = {
      noMsgHinit: noMsgHinit, //没有数据提示块
    }

    computed = {

    }

    methods = {

      //跳转详情页
      returnToDetail(product_id, user_id) {
        wepy.navigateTo({
          url: `/pages/detail/detail?product_id=${product_id}&user_id=${user_id}`
        });
      },

      //返回顶部
      returnToTop() {
        wepy.pageScrollTo({
          scrollTop: 0,
          duration: 300
        });
      },

      //切换类型
      switchType(labelCode){
        console.log('切换类型');
        this.getCurrentType(labelCode);
      },

      //跳转搜索页面
      returnToSeach() {
        wepy.navigateTo({
          url: `/pages/search/search?location=${this.region}`
        });

      },

      //选择地址
      regionChange(e) {
        // console.log('选择地址', e.detail.value)
        let addressArr = e.detail.value;
        this.region = addressArr;
        this.page=1;
        if (addressArr[0] == '全部') {
          this.address = '全部';
        } else if (addressArr[1] == '全部') {
          this.address = addressArr[0];
        } else {
          this.address = addressArr[1];
        }
        let searchQuery = addressArr.join('').replace(/全部/g, '');
        this.searchQuery = searchQuery;
        console.log('地址',searchQuery);
        this.$apply();

        let data={}
        if(searchQuery){
          data = {
            limit: this.limit,
            page: this.page + '',
            // user_id: this.user_id,
            labelCode: this.labelCode,
            searchQuery: searchQuery,
          }
        }else {
          data = {
            limit: this.limit,
            page: this.page + '',
            // user_id: this.user_id,
            labelCode: this.labelCode,
            // searchQuery: searchQuery,
          }
        }
         
        this.getListMsg(data).then(() => {
          wepy.hideLoading();
        })
      },

      //滑动
      onPageScroll(e){
        // console.log(e.scrollTop);
        let scrollTop=e.scrollTop;
        if(scrollTop>=this.swiperHeight){
          this.position=1;
        }else {
          this.position=0;
        }

        if(scrollTop>100){
          this.isShowTop=true;
        }else {
          this.isShowTop=false;
        }      
      }
    }

    //获取轮播图高度
    getSwiperHeight(){
      let that = this;
      wx.createSelectorQuery().select('#swiper').boundingClientRect(function (rect) {
        // console.log('rect',rect);
        that.swiperHeight=rect.height;
        that.$apply();
      }).exec()
    }

    events = {
      
    }

    async onShow() {
      // wepy.showLoading({
      //   title: '加载中', 
      //   mask: true, 
      // });
      // console.log(ListShow);
      let userInfo = await this.$parent.login();
      if (userInfo) {
        this.user_id = userInfo.id + '';
      }  
      this.$apply();
      this.getBanner(); //获取banner和类型
    }

    // 获取banner和类型
    async getBanner() {
      let res = await request.getTypeList();
      if (res) {
        console.log('banner', res);
        this.swiperData.arr = res.rows;
        this.type = res.label.rows;
        // this.labelCode = res.label.rows[0].code;
        this.getCurrentType(this.labelCode);
        this.$apply();
        this.getSwiperHeight();

        let data = {
          limit: this.limit + '',
          page: this.page + '',
          labelCode: this.labelCode + '',
        }
        this.getListMsg(data); //获取列表信息
      }
    }

    // 获取列表信息
    async getListMsg(data) {
      let list = await request.getGoodsLists(data);
      console.log('列表信息', list);

      if (list && list.length > 0) {
        this.msgList = list;
      } else {
        if(this.page==1){
          this.isShowHinit=true;
          this.msgList=[];
        }
        this.$apply();
        wepy.hideLoading();
        return;
      }

      if (this.page == 1) {
        this.msgList = list;
      } else {
        this.msgList = this.msgList.concat(list);
      }
      this.$apply();
      wepy.hideLoading();
    }

    //切换信息类型
    getCurrentType(labelCode) {
      // console.log('type', idx, labelCode);
      if(this.labelCode == labelCode){
        return false;
      }
      // this.currentTypeIndex = idx;
      this.labelCode = labelCode;
      this.page = 1;
      this.msgList = [];
      this.isShowHinit=false;
      this.$apply();

      let data={}
        if(this.searchQuery){
          data = {
            limit: this.limit,
            page: this.page + '',
            labelCode: this.labelCode,
            searchQuery: this.searchQuery,
          }
        }else {
          data = {
            limit: this.limit,
            page: this.page + '',
            labelCode: this.labelCode,
          }
        }
      this.getListMsg(data); //获取列表信息
    }

    //滑动到底部加载更多
    onReachBottom() {
      this.page++;
      wepy.showLoading({
        title: '加载中...',
        mask: true,
      });
     
      let data={}
        if(this.searchQuery){
          data = {
            limit: this.limit,
            page: this.page + '',
            // user_id: this.user_id,
            labelCode: this.labelCode,
            searchQuery: this.searchQuery,
          }
        }else {
          data = {
            limit: this.limit,
            page: this.page + '',
            // user_id: this.user_id,
            labelCode: this.labelCode,
            // searchQuery: searchQuery,
          }
        }
      this.getListMsg(data).then(() => {
        wepy.hideLoading();
      })

    }

    //分享
    onShareAppMessage() {
      this.showShare = false;
      return {
        title: this.info.title,
        path: `/pages/index/index`,
        imageUrl: '',
      };
    }
  }

</script>

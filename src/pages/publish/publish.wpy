<style lang="less">
  @import '../../style/base.less';
  @import './publish.less';

</style>
<template>
  <view class="container">
    <!-- 发表类型提醒 -->
    <view class="publish-hinit">
      <view>免责声明：平台发布的所有信息（收费、免费），平台只负责发布、展示，与平台本身无关，平台不负任何责任。</view>
      <view>温馨提示：本平台可以发布各种二手售卖信息</view>
    </view>

    <form @submit="formSubmit">
      <view class="publish-wrap">
        <!-- 内容描述部分 -->
        <view class="publish-msg-wrap">
          <view class="product-title">产品简介</view>
          <view class="product-brief-wrap">
            <textarea class="brief" maxlength="540" value="{{brief}}" placeholder="请输入产品相关介绍" auto-height="true"
                      name="description"/>
          </view>
          <view class="product-pic">
            <repeat for="{{pics}}" key="index" index="index" item="item">
              <view class="pic-wrap">
                <image class="add_img" src="{{item.path}}" lazy-load="false"></image>
                <image class="close-img" @tap="deleteImg({{index}},{{item.id}})" src="../../image/bg/icon_close.png"
                       lazy-load="false"></image>
              </view>
            </repeat>
            <image wx:if="{{pics.length<9}}" class="add_img" @tap="addImg" src="../../image/bg/icon_add_img.png"
                   lazy-load="false"></image>
            <!-- 图片信息 -->
            <input name="image" value="{{pics}}" type="text" hidden="{{true}}"></input>
          </view>
        </view>
      </view>

      <!-- 用户信息 -->
      <view class="publish-user-msg">
        <view class="user-group-wrap">
          <view class="title">联系方式:</view>
          <input name="phoneNumber" class="content" placeholder="请输入手机号" value="{{tell}}" type="number"
                 maxlength="11"></input>
        </view>

        <view class="user-group-wrap">
          <view class="title">价格:</view>
          ￥<input name="price" class="content" placeholder="0.00" value="{{price}}"></input>
        </view>

        <view class="user-group-wrap">
          <view class="title">类型:</view>
          <picker class="content" value="{{typeIndex}}" range="{{typeArr}}" @change="selectType">
            <view class="type-item">{{typeArr[typeIndex]}}</view>
          </picker>
          <input name="labelCode" class="content" value="{{typeIndex}}" style="display:none;"></input>
        </view>

        <view class="user-group-wrap">
          <view class="title">地址:</view>
          <input name="address" class="content" placeholder="请输入地址" value="{{address}}"></input>
          <view class="content2">
            <view @tap="getLocation" class="location-wrap">
              <image class="location-img" src="../../image/bg/icon_location.png" mode="scaleToFill"
                     lazy-load="false"></image>
            </view>
            <button wx:if="{{isAccredit}}" class="button-cover" open-type="openSetting"
                    @opensetting="handleSetting"></button>
          </view>
        </view>
      </view>

      <!-- 发布按钮 -->
      <view class="publish-btn center-flex">
        我要发布信息
        <button wx:if="{{isLogin}}" form-type="submit" class="button-cover"></button>
        <button wx:else class="button-cover" open-type="getUserInfo" lang="zh_CN"
                bindgetuserinfo="getUserInfo"></button>
      </view>
    </form>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import request from '../../lib/api/request'
  import util from '../../lib/util'
  import {REQUEST_HOST} from '../../lib/api/address'

  export default class PublishDetail extends wepy.page {
    config = {
      navigationBarTitleText: '发布信息页'
    }
    components = {}

    data = {
      isLogin: false, //是否登录
      brief: '',//产品简介
      pics: [],//产品图片
      tell: '',//联系方式
      price: null,//价格
      typeArr: ['请选择类型', '家具', '电器', '书本'],//类型
      typeIndex: 0,//类型索引
      label: '',//类型
      address: '',//地址
      isAccredit: false,//获取位置是否授权
      user_id: '',
    }

    computed = {}

    methods = {

      //点击我要发布信息
      formSubmit(e) {
        console.log('form', e.detail.value);
        let value = e.detail.value;
        if (!value.description) {
          wepy.showModal({
            title: '提示',
            content: '产品简介不能为空',
            showCancel: false,
          });

        } else if (!value.image) {
          wepy.showModal({
            title: '提示',
            content: '图片不能为空',
            showCancel: false,
          });
        } else if (!value.phoneNumber) {
          wepy.showModal({
            title: '提示',
            content: '联系方式不能为空',
            showCancel: false,
          });
        } else if (!(/^1\d{10}$/.test(value.phoneNumber))) {
          wepy.showModal({
            title: '提示',
            content: '联系方式有误',
            showCancel: false,
          });
        } else if (!value.price) {
          wepy.showModal({
            title: '提示',
            content: '价格不能为空',
            showCancel: false,
          });
        } else if (!value.labelCode) {
          wepy.showModal({
            title: '提示',
            content: '类型不能为空',
            showCancel: false,
          });
        } else if (!value.address) {
          wepy.showModal({
            title: '提示',
            content: '地址不能为空',
            showCancel: false,
          });
        } else {
          wepy.showLoading({
            title: '发布中...',
            mask: true,
          });
          value.image = this.pics.map(item=>{
            return item.id
          }).toString()

          value.user_id = this.$parent.globalData.userData.id.toString();
          console.log('上传信息', value);
          let res = request.publishGoodsMsg(value);
          wepy.hideLoading();
        }
      },

      //点击授权按钮，获取用户信息
      async getUserInfo(e) {
        let self = this;
        if (e.detail.userInfo) {
          await self.$parent.login(data.detail.userInfo); //获取用户信息
          console.log('islogin',self.$parent.globalData.isLogin)
          self.isLogin = self.$parent.globalData.isLogin;
          self.$apply();
        } else {
          wepy.showModal({
            title: '温馨提示', //提示的标题,
            content: '为了更好的为您服务，需要您的授权', //提示的内容,
            showCancel: false,
          });
        }
      },

      //点击上传图片
      addImg() {
        let self = this;
        let pLenght = self.pics.length;
        if (pLenght >= 9) {
          wepy.showModal({
            title: '提示',
            content: '最多上传9张图片',
            showCancel: false,
          });
          return
        }
        wx.chooseImage({
          count: 9 - pLenght, //可以添加的图片数量
          success(res) {
            console.log('res', res);
            let pics = res.tempFilePaths;  //选择的图片list

            wx.showLoading({
              title: '上传中',
            });
            //上传服务器
            //需要改造成promise
            for (let i = 0; i < pics.length; i++) {
              wx.uploadFile({
                url: REQUEST_HOST + 'api/image/upload', // 仅为示例，非真实的接口地址
                filePath: pics[i],
                name: 'uploadFile',
                success(res) {
                  let jsData = JSON.parse(res.data);
                  //上传成功应该返回图片ID，本地回显用本地路径
                  //jsData.data[0].key jsData.data[0].hash
                  self.pics.push({
                    path: pics[i], //本地地址
                    id: jsData.data[0].key, //图片ID
                  });
                  self.$apply();
                  wx.hideLoading();
                },
                fail(res) {
                  wx.hideLoading();
                }
              })
              if (i === pics.length - 1) {

              }
            }


          }
        })
      },

      /*
        删除图片
        idx index
        ID 图片ID
      */
      async deleteImg(idx, id) {
        console.log('删除图片：',idx,id);
        let delRes = await request.delPic({id: id});  //请求接口
        if(true || delRes){
          console.log('删除结果');
          this.pics.splice(idx, 1); //更新视图
        }

      },

      //选择产品类型
      selectType(e) {
        console.log('产品类型', e.detail.value);
        this.typeIndex = e.detail.value;
      },

      // 获取地址
      getLocation() {
        let self = this;
        wx.chooseLocation({
          success: (res) => {
            console.log('获取地理位置成功', res);
            self.address = res.address;
            self.$apply();
          },
          fail: (res) => {
            console.log('获取地理位置失败', res);
            self.isAccredit = true;
            self.$apply();
          }
        })
      },

      // 设置授权列表
      handleSetting(e) {
        console.log('e', e);
        let self = this;
        if (!e.detail.authSetting['scope.userLocation']) {
          wx.showModal({
            title: '警告',
            content: '若不打开授权，则无法获取定位！',
            showCancel: false
          })
          self.isAccredit = true;
          self.$apply();

        } else {
          wx.showModal({
            title: '提示',
            content: '您已授权，可以选择定位！',
            showCancel: false
          })
          self.isAccredit = false;
          self.$apply();
        }
      },

    }

    events = {}

    async onLoad() {
      // if (util.checkStorageLogin()) {
      //   this.isLogin = true;
      // }
      console.log('globalData',this.$parent.globalData);
      this.isLogin = this.$parent.globalData.isLogin;
      this.$apply();
    }
  }

</script>
